<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAAAZCAYAAACxZDnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACCUlEQVRoQ+3av2saYRjA8fxH
        /gkdXBQnR6fiKqSDq0NoXCVdHIV0iNBqxVB6lVR7j7mYq2lszubH2aHJJU1SrpjSK8RiI/j0Ueg96eyz
        9XnhC8e9cHAf3uF9uVtaujei0WiEeqDJGNy3Da/j8Xg9FovhrOXlR9oCBslkcu5IOYlEIhIi08TKbHJt
        7Qm67if0zi+0BQ2ePa9gKpVCcoUQmm7A49VVPD3zNEGDavXFHDuETqfTsL7+FD+fnmmCBscnLpItQ2cy
        GdjYKKPnnWvCBmTL0NlsFiqVKl58udSEDciWoXO5HNQ3N/Hq+qsmbEC2DJ3P58EwXqPvf9OEDciWoQuF
        AjRbLRzefNeEDciWoYvFIliWhUHwUxM2IFuGLpVK0O3u4Wj0SxM2IFuGLpfL0O/3cTKZaMIGZMvQtVoN
        XNdFHfICZMvQhmHAfq+ne2jhPfTsXEK2DG2aJrS3LbQ6tiZsQLYMbds27OzsYnu7owkbkC1DO44D9rsu
        mmBpwgZky9CDwQD23u9j821bEzYgW4b2PA96Hw5wq2lqwgZky9C+74PTP8TGVksTNiBbhg6CAA6PTtBo
        vNEEDWabC7Jl6PF4XL+9Hc1X88tXDU3I4PLqGsn2R/gpazqdRij8fXeHR8cudna72gIGB85HHA5vcGZK
        rfzz2wEdPiNUnfLkD6L/5ROB3vrhX+Q/fk7kIiSTcN4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAAAZCAYAAACxZDnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACCUlEQVRoQ+3av2saYRjA8fxH
        /gkdXBQnR6fiKqSDq0NoXCVdHIV0iNBqxVB6lVR7j7mYq2lszubH2aHJJU1SrpjSK8RiI/j0Ueg96eyz
        9XnhC8e9cHAf3uF9uVtaujei0WiEeqDJGNy3Da/j8Xg9FovhrOXlR9oCBslkcu5IOYlEIhIi08TKbHJt
        7Qm67if0zi+0BQ2ePa9gKpVCcoUQmm7A49VVPD3zNEGDavXFHDuETqfTsL7+FD+fnmmCBscnLpItQ2cy
        GdjYKKPnnWvCBmTL0NlsFiqVKl58udSEDciWoXO5HNQ3N/Hq+qsmbEC2DJ3P58EwXqPvf9OEDciWoQuF
        AjRbLRzefNeEDciWoYvFIliWhUHwUxM2IFuGLpVK0O3u4Wj0SxM2IFuGLpfL0O/3cTKZaMIGZMvQtVoN
        XNdFHfICZMvQhmHAfq+ne2jhPfTsXEK2DG2aJrS3LbQ6tiZsQLYMbds27OzsYnu7owkbkC1DO44D9rsu
        mmBpwgZky9CDwQD23u9j821bEzYgW4b2PA96Hw5wq2lqwgZky9C+74PTP8TGVksTNiBbhg6CAA6PTtBo
        vNEEDWabC7Jl6PF4XL+9Hc1X88tXDU3I4PLqGsn2R/gpazqdRij8fXeHR8cudna72gIGB85HHA5vcGZK
        rfzz2wEdPiNUnfLkD6L/5ROB3vrhX+Q/fk7kIiSTcN4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="cancelButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAAAZCAYAAACxZDnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACCUlEQVRoQ+3av2saYRjA8fxH
        /gkdXBQnR6fiKqSDq0NoXCVdHIV0iNBqxVB6lVR7j7mYq2lszubH2aHJJU1SrpjSK8RiI/j0Ueg96eyz
        9XnhC8e9cHAf3uF9uVtaujei0WiEeqDJGNy3Da/j8Xg9FovhrOXlR9oCBslkcu5IOYlEIhIi08TKbHJt
        7Qm67if0zi+0BQ2ePa9gKpVCcoUQmm7A49VVPD3zNEGDavXFHDuETqfTsL7+FD+fnmmCBscnLpItQ2cy
        GdjYKKPnnWvCBmTL0NlsFiqVKl58udSEDciWoXO5HNQ3N/Hq+qsmbEC2DJ3P58EwXqPvf9OEDciWoQuF
        AjRbLRzefNeEDciWoYvFIliWhUHwUxM2IFuGLpVK0O3u4Wj0SxM2IFuGLpfL0O/3cTKZaMIGZMvQtVoN
        XNdFHfICZMvQhmHAfq+ne2jhPfTsXEK2DG2aJrS3LbQ6tiZsQLYMbds27OzsYnu7owkbkC1DO44D9rsu
        mmBpwgZky9CDwQD23u9j821bEzYgW4b2PA96Hw5wq2lqwgZky9C+74PTP8TGVksTNiBbhg6CAA6PTtBo
        vNEEDWabC7Jl6PF4XL+9Hc1X88tXDU3I4PLqGsn2R/gpazqdRij8fXeHR8cudna72gIGB85HHA5vcGZK
        rfzz2wEdPiNUnfLkD6L/5ROB3vrhX+Q/fk7kIiSTcN4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>If this document is related somehow to the document you had selected, you may want to use "Attach As Child Document."  The counseling you generate will be attached to document you had selected as a related child document.

Otherwise, you will generally want to use "New Document."</value>
  </data>
</root>